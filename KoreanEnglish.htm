<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hangul to English Pronunciation</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; }
        textarea { width: 100%; height: 100px; }
        button { padding: 10px 20px; font-size: 16px; }
        pre { background: #f4f4f4; padding: 10px; border-radius: 5px; white-space: pre-wrap; word-wrap: break-word; }
        .error { color: red; font-weight: bold; }
    </style>
</head>
<body>
    <h1>Hangul to English Pronunciation</h1>
    <textarea id="hangulInput" placeholder="Paste Hangul text here"></textarea><br>
    <button onclick="processHangul()">Process</button>
    <pre id="output"></pre>

    <script>
        // Corrected Hangul to English phonetic mappings for Initial Consonants, Vowels, and Final Consonants
        const hangulMap = {
            initial: {
                'ㄱ': 'g', 'ㄲ': 'kk', 'ㄴ': 'n', 'ㄷ': 'd', 'ㄸ': 'tt', 'ㄹ': 'r/l', 'ㅁ': 'm', 'ㅂ': 'b',
                'ㅃ': 'pp', 'ㅅ': 's', 'ㅆ': 'ss', 'ㅇ': 'ng', 'ㅈ': 'j', 'ㅉ': 'jj', 'ㅊ': 'ch', 'ㅋ': 'k',
                'ㅌ': 't', 'ㅍ': 'p', 'ㅎ': 'h'
            },
            vowels: {
                'ㅏ': 'a', 'ㅐ': 'ae', 'ㅑ': 'ya', 'ㅒ': 'yae', 'ㅓ': 'eo', 'ㅔ': 'e', 'ㅕ': 'yeo', 'ㅖ': 'ye',
                'ㅗ': 'o', 'ㅘ': 'wa', 'ㅙ': 'wae', 'ㅚ': 'oe', 'ㅛ': 'yo', 'ㅜ': 'u', 'ㅝ': 'wo', 'ㅞ': 'we',
                'ㅟ': 'wi', 'ㅠ': 'yu', 'ㅡ': 'eu', 'ㅣ': 'i'
            },
            final: {
                '': '', 'ㄱ': 'g', 'ㄲ': 'kk', 'ㄳ': 'gs', 'ㄴ': 'n', 'ㄵ': 'nj', 'ㄶ': 'nh', 'ㄷ': 'd',
                'ㄸ': 'tt', 'ㄹ': 'l', 'ㄺ': 'lg', 'ㄻ': 'lm', 'ㄼ': 'lb', 'ㄽ': 'ls', 'ㄾ': 'lt', 'ㄿ': 'lp',
                'ㅀ': 'lh', 'ㅁ': 'm', 'ㅂ': 'b', 'ㅄ': 'bs', 'ㅅ': 's', 'ㅆ': 'ss', 'ㅇ': 'ng', 'ㅈ': 'j',
                'ㅊ': 'ch', 'ㅋ': 'k', 'ㅌ': 't', 'ㅍ': 'p', 'ㅎ': 'h'
            }
        };

        // Function to process Hangul input and display its English pronunciation breakdown
        function processHangul() {
            const hangul = document.getElementById("hangulInput").value.trim();
            const output = document.getElementById("output");
            output.textContent = "";  // Clear previous output

            if (!hangul) {
                output.innerHTML = "<span class='error'>Please enter Hangul text!</span>";
                return;
            }

            const syllables = decomposeHangul(hangul);

            if (syllables.length === 0) {
                output.innerHTML = "<span class='error'>No valid Hangul characters detected!</span>";
                return;
            }

            syllables.forEach(syllable => {
                const pronunciation = syllable.map((el, idx) => `${el} (${getPronunciation(idx, el)})`).join(' ');
                output.textContent += `${syllable[0]} => ${pronunciation}\n`;
            });
        }

        // Function to decompose Hangul text into its components (initial, vowel, final)
        function decomposeHangul(text) {
            const syllables = [];

            // Iterate through each character in the input text
            for (let i = 0; i < text.length; i++) {
                const charCode = text.charCodeAt(i) - 0xAC00;

                // Skip characters that are not Hangul (i.e., outside the Hangul Unicode block)
                if (charCode < 0 || charCode > (11171)) {
                    continue;
                }

                const initial = Math.floor(charCode / (21 * 28));  // Initial consonant
                const vowel = Math.floor((charCode % (21 * 28)) / 28);  // Vowel
                const final = charCode % 28;  // Final consonant

                syllables.push([initial, vowel, final]);
            }

            return syllables;
        }

        // Function to get the pronunciation from index and component (initial, vowel, or final)
        function getPronunciation(type, index) {
            const keys = Object.keys(hangulMap);  // ['initial', 'vowel', 'final']
            if (type === 0) {  // Initial consonant
                return hangulMap.initial[index] || '';  // Return empty string if no pronunciation
            } else if (type === 1) {  // Vowel
                return hangulMap.vowels[index] || '';  // Return empty string if no pronunciation
            } else if (type === 2) {  // Final consonant
                return hangulMap.final[index] || '';  // Return empty string if no pronunciation
            }
            return '';
        }

    </script>
</body>
</html>

