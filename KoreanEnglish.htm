<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hangul to English Pronunciation & Translation</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    textarea {
      width: 100%;
      height: 100px;
    }
    #result {
      white-space: pre-wrap;
      margin-top: 20px;
      padding: 10px;
      border: 1px solid #ccc;
      background-color: #f9f9f9;
    }
  </style>
</head>
<body>
  <h1>Hangul to English Pronunciation & Translation</h1>

  <textarea id="hangulInput" placeholder="Paste Hangul text here..."></textarea><br><br>

  <button onclick="processHangul()">Process</button>

  <h2>Phonetic Output:</h2>
  <div id="result"></div>

  <script>
    // Hangul to English mapping for consonants and vowels
    const hangulToEnglish = {
      'ㄱ': 'g', 'ㄲ': 'kk', 'ㄴ': 'n', 'ㄷ': 'd', 'ㄸ': 'tt', 'ㄹ': 'r', 'ㅁ': 'm', 'ㅂ': 'b',
      'ㅃ': 'pp', 'ㅅ': 's', 'ㅆ': 'ss', 'ㅇ': 'ng', 'ㅈ': 'j', 'ㅉ': 'jj', 'ㅊ': 'ch', 'ㅋ': 'k',
      'ㅌ': 't', 'ㅍ': 'p', 'ㅎ': 'h', 'ㅏ': 'ah', 'ㅐ': 'ae', 'ㅑ': 'ya', 'ㅒ': 'yae', 'ㅓ': 'eo',
      'ㅔ': 'eh', 'ㅕ': 'yeo', 'ㅖ': 'ye', 'ㅗ': 'o', 'ㅘ': 'wa', 'ㅙ': 'wae', 'ㅚ': 'oe', 'ㅛ': 'yo',
      'ㅜ': 'u', 'ㅝ': 'wo', 'ㅞ': 'we', 'ㅟ': 'wi', 'ㅠ': 'yu', 'ㅡ': 'eu', 'ㅢ': 'ui', 'ㅣ': 'ee'
    };

    // Function to break Hangul syllables into their components
    function breakHangul(syllable) {
      const syllableCode = syllable.charCodeAt(0) - 0xAC00; // Start from 0xAC00
      const initialIndex = Math.floor(syllableCode / 588);
      const vowelIndex = Math.floor((syllableCode % 588) / 28);
      const finalIndex = syllableCode % 28;

      // Hangul jamo arrays for initial, vowel, and final components
      const initialConsonants = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];
      const vowels = ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'];
      const finalConsonants = ['', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];

      const initial = initialConsonants[initialIndex];
      const vowel = vowels[vowelIndex];
      const final = finalConsonants[finalIndex];

      return [initial, vowel, final];
    }

    // Function to convert Hangul string to English pronunciation
    function hangulToPhonetic(hangulText) {
      let result = '';
      
      // Process each syllable in the Hangul string
      for (let i = 0; i < hangulText.length; i++) {
        const syllable = hangulText.charAt(i);
        
        // Ensure it's a valid Hangul syllable
        if (syllable.charCodeAt(0) >= 0xAC00 && syllable.charCodeAt(0) <= 0xD7A3) {
          const components = breakHangul(syllable);
          const phonetic = components.map(comp => `${comp} (${hangulToEnglish[comp] || comp})`).join(' ');
          result += `${syllable} = ${phonetic}\n`;  // Formatting like 도=ㄷ (d) ㅗ (o)
        } else {
          result += syllable; // Non-Hangul characters stay as they are
        }
      }
      
      return result.trim();
    }

    // Function to translate Korean text into English using LibreTranslate API
    function translateKoreanToEnglish(hangulText) {
      const url = `https://libretranslate.de/translate`;

      // Make a POST request to the LibreTranslate API
      return fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          q: hangulText,
          source: 'ko',
          target: 'en',
        }),
      })
        .then(response => response.json())
        .then(data => {
          if (data.translatedText) {
            return data.translatedText; // Return the translation result
          } else {
            return 'Translation failed. Please try again.';
          }
        })
        .catch(error => {
          console.error('Error:', error);
          return 'An error occurred. Please try again later.';
        });
    }

    // Function to process Hangul (convert + translate) with a single button
    async function processHangul() {
      const hangulText = document.getElementById('hangulInput').value;

      // Step 1: Convert Hangul to Phonetic Representation
      const phoneticText = hangulToPhonetic(hangulText);

      // Step 2: Translate the whole word to English using LibreTranslate API
      const translation = await translateKoreanToEnglish(hangulText);

      // Step 3: Combine the results
      const finalOutput = `${phoneticText}\n\n${hangulText} = ${translation}`;

      // Display the result in the output div
      document.getElementById('result').textContent = finalOutput;
    }
  </script>
</body>
</html>



