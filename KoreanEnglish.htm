<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hangul to English Pronunciation & Translation</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    textarea {
      width: 100%;
      height: 100px;
    }
    #result {
      white-space: pre-wrap;
      margin-top: 20px;
      padding: 10px;
      border: 1px solid #ccc;
      background-color: #f9f9f9;
    }
  </style>
</head>
<body>
  <h1>Hangul to English Pronunciation & Translation</h1>

  <textarea id="hangulInput" placeholder="Paste Hangul text here..."></textarea><br><br>

  <button onclick="processHangul()">Process</button>

  <h2>Phonetic Output:</h2>
  <div id="result"></div>

  <script>
    // Hangul to English mapping for consonants and vowels (improved pronunciation)
    const hangulToEnglish = {
      'ㄱ': 'g', 'ㄲ': 'kk', 'ㄴ': 'n', 'ㄷ': 'd', 'ㄸ': 'tt', 'ㄹ': 'r', 'ㅁ': 'm', 'ㅂ': 'b',
      'ㅃ': 'pp', 'ㅅ': 's', 'ㅆ': 'ss', 'ㅇ': 'ng', 'ㅈ': 'j', 'ㅉ': 'jj', 'ㅊ': 'ch', 'ㅋ': 'k',
      'ㅌ': 't', 'ㅍ': 'p', 'ㅎ': 'h',
      
      // Vowels with more accurate romanization
      'ㅏ': 'ah', 'ㅐ': 'ae', 'ㅑ': 'yah', 'ㅒ': 'yae', 'ㅓ': 'eo', 'ㅔ': 'eh', 'ㅕ': 'yeo', 'ㅖ': 'ye',
      'ㅗ': 'o', 'ㅘ': 'wa', 'ㅙ': 'wae', 'ㅚ': 'oe', 'ㅛ': 'yo', 'ㅜ': 'u', 'ㅝ': 'wo', 'ㅞ': 'we',
      'ㅟ': 'wi', 'ㅠ': 'yu', 'ㅡ': 'eu', 'ㅢ': 'ui', 'ㅣ': 'ee',

      // Double vowels (more accurate romanization)
      'ㅏㅣ': 'ai', 'ㅓㅣ': 'ei', 'ㅗㅣ': 'oi', 'ㅜㅣ': 'ui', 'ㅡㅣ': 'ui', 'ㅗㅏ': 'oa', 'ㅜㅏ': 'ua'
    };

    // Special translations for specific words/phrases (this should be in your own database)
    const specialTranslations = {
      '이시바': 'Ishiba',
      '수상과': 'Prime Minister',
      '트럼프': 'Trump', // Example for Trump
      // Add more words and their translations here
    };

    // Function to break Hangul syllables into their components
    function breakHangul(syllable) {
      const syllableCode = syllable.charCodeAt(0) - 0xAC00; // Start from 0xAC00
      const initialIndex = Math.floor(syllableCode / 588);
      const vowelIndex = Math.floor((syllableCode % 588) / 28);
      const finalIndex = syllableCode % 28;

      // Hangul jamo arrays for initial, vowel, and final components
      const initialConsonants = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];
      const vowels = ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'];
      const finalConsonants = ['', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];

      const initial = initialConsonants[initialIndex];
      const vowel = vowels[vowelIndex];
      const final = finalConsonants[finalIndex];

      return [initial, vowel, final];
    }

    // Function to convert Hangul string to English pronunciation
    function hangulToPhonetic(hangulText) {
      let result = '';
      
      // Process each syllable in the Hangul string
      for (let i = 0; i < hangulText.length; i++) {
        const syllable = hangulText.charAt(i);
        
        // Ensure it's a valid Hangul syllable
        if (syllable.charCodeAt(0) >= 0xAC00 && syllable.charCodeAt(0) <= 0xD7A3) {
          const components = breakHangul(syllable);
          const phonetic = components.map(comp => `${comp} (${hangulToEnglish[comp] || comp})`).join(' ');
          result += `${syllable} = ${phonetic}\n`;  // No extra parentheses at the end
        } else {
          result += syllable; // Non-Hangul characters stay as they are
        }
      }
      
      return result.trim();
    }

    // Function to translate Korean text into English using custom rules
    function translateKoreanToEnglish(hangulText) {
      // Look for exact matches in the database (specialTranslations object)
      if (specialTranslations[hangulText]) {
        return specialTranslations[hangulText];
      } else {
        // If no exact match, return the Hangul text (or implement a default translation strategy here)
        return hangulText;
      }
    }

    // Function to process Hangul (convert + translate) with a single button
    function processHangul() {
      const hangulText = document.getElementById('hangulInput').value.trim();
      
      // Split the input into words (separated by spaces) for individual translation
      const words = hangulText.split(' ');

      let phoneticText = '';
      let translatedText = '';

      // Process each word individually
      words.forEach(word => {
        // Step 1: Convert Hangul to Phonetic Representation
        phoneticText += hangulToPhonetic(word) + '\n';

        // Step 2: Translate the word using custom translation rules
        const translation = translateKoreanToEnglish(word);

        // Step 3: Append the translation to the result (each translation on a new line)
        translatedText += `${word} = ${translation}\n`;
      });

      // Step 4: Combine phonetic breakdown and translations
      const finalOutput = phoneticText + '\n' + translatedText;

      // Display the result in the output div
      document.getElementById('result').textContent = finalOutput.trim();
    }
  </script>
</body>
</html>
