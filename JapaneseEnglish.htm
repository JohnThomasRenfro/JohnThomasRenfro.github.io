<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>The Japanese to English Parser</title>
<link rel="icon" href="reading.png" type="image/png">
<link rel="stylesheet" href="styles.css">
<script src='ReplsBConst.js'></script>
<script src='FormatWord.js'></script>
<script>

let a = "";

function translateB() {
  let workingText = a;

  // Apply only Japanese replacements
  replsB.forEach(replace => {
    workingText = workingText.replace(replace.p1, replace.r1);
  });

  // Get English-to-Japanese matches
  const engMatches = translateC(a);

  // Display combined results
  document.getElementById("translatedTextDisplay").innerHTML = `
    <div><strong>Translated Text:</strong><br>${workingText}</div>
    <hr>
    <div><strong>Matched English Words if any:</strong><br>${engMatches}</div>`;
}

function translateC(inputText) {
  const results = [];

  // Step 1: Clean input
  let cleanedInput = inputText
    .toLowerCase()
    .replace(/\b(a|the)\b/g, '') // remove 'a' and 'the'
    .replace(/\s+/g, ' ')
    .trim();

  const suffixDescriptions = {
    'tion': 'noun ending',
    'ed': 'past tense ending',
    'est': 'superlative ending',	
    'ing': 'progressive form',
    's': 'plural',
    'es': 'plural/third-person',
    'ly': 'adverbial form',
    'ness': 'noun form',
    'ment': 'noun form',
    'al': 'adjective form',
    'ous': 'adjective form',
    'able': 'adjective form',
    'ive': 'adjective form',
  };

  function splitSuffix(word) {
    for (const suffix of Object.keys(suffixDescriptions).sort((a, b) => b.length - a.length)) {
      if (word.endsWith(suffix) && word.length > suffix.length + 1) {
        return [word.slice(0, -suffix.length), suffix];
      }
    }
    return [word, null];
  }

  function extractKanji(p1) {
    const match = p1.toString().match(/\/\\?\(?(.+?)\\?\)?[+*]?\/[gimsuy]*/);
    if (!match) return '?';
    return match[1]
      .replace(/\)\(\?!X\)/g, '')
      .replace(/[^\p{Script=Han}\p{Script=Hiragana}\p{Script=Katakana}ー]+/gu, '');
  }

  function extractRomaji(r1) {
    const match = r1.match(/\$[0-9]X([a-zA-Z]+),/);
    return match ? match[1] : '';
  }

  const phraseEntries = [];

  // Step 2: Build searchable dictionary
  replsB.forEach(entry => {
    if (/Punctuation/i.test(entry.r1)) return;

    const englishMatch = entry.r1.match(/(?:\$\dX\([^)]+\))+ (.+)/);
    const englishText = englishMatch ? englishMatch[1] : entry.r1;

    englishText
      .split(/[,;]/)
      .map(s => s.trim().toLowerCase())
      .forEach(phrase => {
        const basePhrase = phrase
          .replace(/\b(a|the)\b/g, '')
          .replace(/\s+/g, ' ')
          .trim();

        if (basePhrase) {
          phraseEntries.push({ phrase: basePhrase, entry });
        }
      });
  });

  // Step 3: Sort by length (longer first)
  phraseEntries.sort((a, b) => b.phrase.length - a.phrase.length);

  // Step 4: Match input
  const words = cleanedInput.split(/\s+/);
  for (let word of words) {
    const [base, suffix] = splitSuffix(word);
    const matches = phraseEntries.filter(e => e.phrase === base);

    if (matches.length) {
      const mainEntry = matches[0].entry;
      const primaryKanji = extractKanji(mainEntry.p1);
      const primaryRomaji = extractRomaji(mainEntry.r1);

      const altKanji = matches
        .map(m => extractKanji(m.entry.p1))
        .filter(k => k && k !== primaryKanji && k !== '?')
        .filter((v, i, a) => a.indexOf(v) === i);

      let line = `${base}${primaryKanji ? primaryKanji : ''}`;
      if (primaryRomaji) {
        line += `(${primaryRomaji})`;
      }
      if (suffix && suffixDescriptions[suffix]) {
        line += `${suffix} (${suffixDescriptions[suffix]})`;
      } else if (suffix) {
        line += suffix;
      }

      if (altKanji.length) {
        line += `<br> also: ${altKanji.join(', ')}`;
      }

      results.push(line);
    }
  }

  return results.length ? results.join("<br>") : "(no matching English words found)";
}


</script></head>

<body>
<div class="HeaderStyle">Studying Japanese Language</div>
<br>
Cut and paste this Japanese text into text area below. SOURCE: Yahoo News
<p>

トランプ米大統領の関税政策の見直しについて協議するため、赤沢亮正経済再生相が16日午前、米ワシントンに向けて出発した。17日朝（現地時間16日夕）に米側の交渉役と会談する。日本製品を関税の対象から外すよう求めるとともに、米側の意向を探る方針だ。【図表】赤沢？誰？戸惑う米政府の関係者 赤沢氏は出発前、記者団の取材に対し「交渉ごとは担当間の信頼関係に結果が大きく左右される。しっかり信頼関係も築いてきたい。日本の国益にとっても米国の国益にとってもウィンウィンな関係になるようないい交渉ができると思っている」と語った。

<hr>
<textarea cols="35" rows="6" onchange="a=this.value;translateB()" placeholder='Put the Japanese text here.'></textarea>
<br>
<span id="translatedTextDisplay"></span>
<p> 
<button id="adminToggle" onclick="toggleAdminSection()" style="position: fixed; top: 10px; right: 10px; z-index: 1000; background-color: #0078d4; color: white; border: none; padding: 5px 10px; font-size: 12px; border-radius: 3px; cursor: pointer;">
Admin Use Only
</button>

<div id="adminSection" style="position: fixed; top: 50px; right: 10px; width: 320px; height: auto; max-height: 500px; overflow-y: auto; padding: 10px; background-color: #ffffff; border: 1px solid #cccccc; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); font-size: 12px; display: none; z-index: 999; border-radius: 5px;">
<h2 style="margin: 5px 0; font-size: 14px; color: #333333;">Admin Use Only</h2>

<input type="text" id="wordInput" placeholder="Enter Japanese word" style="width: 100%; margin-bottom: 5px; font-size: 12px; padding: 3px; border: 1px solid #cccccc; border-radius: 3px;">
<input type="text" id="pronunciationInput" placeholder="Enter romanized pronunciation" style="width: 100%; margin-bottom: 5px; font-size: 12px; padding: 3px; border: 1px solid #cccccc; border-radius: 3px;">
<input type="text" id="definitionInput" placeholder="Enter English definition" style="width: 100%; margin-bottom: 5px; font-size: 12px; padding: 3px; border: 1px solid #cccccc; border-radius: 3px;">

<!-- Select Input -->
<select id="typeSelector" style="width: 100%; margin-bottom: 10px; font-size: 12px; padding: 3px; border: 1px solid #cccccc; border-radius: 3px;">
<option value="Non-Verb" selected>Non-Verb</option>
<option value="IAdjective">IAdjective</option>
<option value="IchidanVerb">IchidanVerb</option>
<option value="UVerb">UVerb</option>	
<option value="RuVerb">RuVerb</option>
<option value="SuVerb">SuVerb</option>
<option value="KuVerb">KuVerb</option>
<option value="GuVerb">GuVerb</option>	
<option value="BuVerb">BuVerb</option>
<option value="MuVerb">MuVerb</option>
<option value="NuVerb">NuVerb</option>
<option value="TsuVerb">TsuVerb</option>
</select>

<!-- Buttons -->
<button onclick="formatAndDisplay()" style="width: 100%; margin-bottom: 5px; font-size: 12px; padding: 5px; background-color: #0078d4; color: white; border: none; border-radius: 3px; cursor: pointer;">
Generate
</button>
<button onclick="copyToClipboard()" style="width: 100%; font-size: 12px; padding: 5px; background-color: #0078d4; color: white; border: none; border-radius: 3px; cursor: pointer;">
Copy to Clipboard
</button>
<p id="output" style="margin-top: 10px; font-size: 12px; color: #333333;"></p>
</div>
<br>
<div class=HeaderStyle>Memorizing Kanji</div>
<ul>
<li>Use <a href="https://addons.mozilla.org/en-US/firefox/addon/10ten-ja-reader/" target="Xblank">10ten Japanese Reader</a> browser extension to read kanji on your desktop/laptop computer.
</li><li>Group kanji by the same sound using <a href="https://www.wanikani.com/vocabulary/" target="Xblank">WaniKani</a>.
</li><li>See if you can notice any similar elements in the kanjis.
</li><li>Practice writing the same sound kanjis until you can do it from memory using <a href="https://play.google.com/store/apps/details?id=com.craxic.akebifree&amp;hl=en&amp;gl=US" target="Xblank">Android Akebi</a>.
</li></ul>
<h1>Homework</h1>

Practice writing in Akebi until you can memorize the Syuu kanjis.<br>
<ul>
<li>習慣 (しゅうかん) - Habit, custom

<li>集まる (あつまる) - To gather, to collect

<li>修正 (しゅうせい) - Correction, revision

<li>週末 (しゅうまつ) - Weekend

<li>宗教 (しゅうきょう) - Religion

<li>習得 (しゅうとく) - Acquisition (of skill, knowledge)

<li>出張 (しゅっちょう) - Business trip

<li>修理 (しゅうり) - Repair, maintenance

<li>集計 (しゅうけい) - Total, sum (of data)

<li>終点 (しゅうてん) - Final destination
</ul>
<p> 
<img src='PeterReft.png' alt='photo by Peter Reft' title='photo by Peter Reft'>
</body>
</html>
