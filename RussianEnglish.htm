<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Russian Suffix Separator and Pronunciation Tool</title>
  <style>
    /* Dark Russian-themed background */
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
      background-color: #2a2a2a;  /* Dark background */
      color: #f4f4f4;  /* Light text for contrast */
    }

    h1, h3 {
      color: #f2d034;  /* Bright yellow for headings */
    }

    textarea {
      width: 100%;
      height: 150px;
      margin-bottom: 20px;
      background-color: #333333;  /* Darker textarea */
      color: #f4f4f4;  /* Light text in textarea */
      border: 2px solid #f2d034;  /* Yellow border */
      padding: 10px;
      font-size: 16px;
    }

    button {
      background-color: #f2d034;  /* Yellow button */
      color: #2a2a2a;  /* Dark text for button */
      padding: 10px 20px;
      border: none;
      cursor: pointer;
      font-size: 16px;
    }

    button:hover {
      background-color: #e1c32f;  /* Slightly darker yellow for hover effect */
    }

    .output {
      white-space: pre-wrap;
      font-family: Courier, monospace;
      background-color: #222222;  /* Dark background for output */
      color: #e0e0e0;  /* Light gray text */
      padding: 20px;
      border-radius: 5px;
      font-size: 16px;
    }

    /* Styling for input/output area */
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
  </style>
</head>
<body>

  <div class="container">
    <h1>Russian Suffix Separator and Pronunciation Tool</h1>
    
    <textarea id="inputText" placeholder="Enter a Russian paragraph..."></textarea><br>
    <button onclick="processText()">Process</button>

    <h3>Processed Output:</h3>
    <div id="output" class="output"></div>
  </div>

  <script>
    function processText() {
      const inputText = document.getElementById("inputText").value;
      const output = document.getElementById("output");

      // Regular expressions for suffix matching (common cases, plural endings, etc.)
      const suffixPatterns = [
        { pattern: /(а|я)$/, description: "feminine singular noun (e.g. женщина -> женщ-ина)", pronunciation: "ah, ya" },
        { pattern: /(ы|и)$/, description: "plural (e.g. дети -> дет-ы)", pronunciation: "ee" },
        { pattern: /(ую|ю)$/, description: "accusative singular (e.g. книгу -> книг-у)", pronunciation: "oo, yu" },
        { pattern: /(ил|ла|ло|ли)$/, description: "past tense verbs (e.g. дал -> да-л)", pronunciation: "il, la, lo, li" },
        { pattern: /(ешь|ёшь|им|ит|имите|ят)$/, description: "present tense verb suffixes (e.g. делаешь -> дела-ешь)", pronunciation: "esh, yesh, im, it" },
        { pattern: /(е|о|е|и)$/, description: "prepositional case suffixes (e.g. столе -> стол-е)", pronunciation: "eh, o, ee" }
      ];

      // Simple phonetic mapping for Russian letters to English
      const pronunciationMap = {
        'а': 'ah',
        'б': 'b',
        'в': 'v',
        'г': 'g',
        'д': 'd',
        'е': 'ye',
        'ё': 'yo',
        'ж': 'zh',
        'з': 'z',
        'и': 'ee',
        'й': 'y',
        'к': 'k',
        'л': 'l',
        'м': 'm',
        'н': 'n',
        'о': 'o',
        'п': 'p',
        'р': 'r',
        'с': 's',
        'т': 't',
        'у': 'oo',
        'ф': 'f',
        'х': 'kh',
        'ц': 'ts',
        'ч': 'ch',
        'ш': 'sh',
        'щ': 'shch',
        'ь': '',
        'ы': 'y',
        'ъ': '',
        'э': 'eh',
        'ю': 'yu',
        'я': 'ya'
      };

      // Helper function to convert Russian letters to English pronunciation
      function convertToPronunciation(word) {
        return word.split('').map(letter => pronunciationMap[letter] || letter).join('');
      }

      // Split the input text into words
      const inputWords = inputText.split(/\s+/);
      let resultText = "";

      // Process each word
      inputWords.forEach(word => {
        let wordLower = word.toLowerCase();
        let pronunciation = convertToPronunciation(wordLower);
        
        // Check if the word has a suffix based on the patterns
        let suffixInfo = suffixPatterns.find(suffix => suffix.pattern.test(wordLower));
        
        if (suffixInfo) {
          let suffixMatch = wordLower.match(suffixInfo.pattern);
          let root = wordLower.replace(suffixInfo.pattern, '');
          
          // Format the result
          resultText += `${pronunciation} (${word})\n`;
          resultText += `${root} - ${suffixMatch[0]} - ${suffixInfo.description}\n\n`;
        } else {
          resultText += `${pronunciation} (${word})\n\n`;
        }
      });

      // Display the result
      output.textContent = resultText;
    }
  </script>

</body>
</html>
